// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model usuarios {
  id             Int      @id @default(autoincrement())
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  registerActive Boolean  @default(true) @db.Boolean()
  nombreCompleto String   @db.VarChar(500)
  usuario        String   @unique() @db.VarChar(50)
  password       String   @db.VarChar(200)
}

model marca {
  id             Int        @id @default(autoincrement())
  createdAt      DateTime   @default(now())
  updatedAt      DateTime   @updatedAt
  registerActive Boolean    @default(true) @db.Boolean()
  nombre         String     @db.VarChar(100)
  products       producto[]
}

model categoria {
  id             Int        @id @default(autoincrement())
  createdAt      DateTime   @default(now())
  updatedAt      DateTime   @updatedAt
  registerActive Boolean    @default(true) @db.Boolean()
  nombre         String     @db.VarChar(100)
  products       producto[]
}

model producto {
  id                 Int                  @id @default(autoincrement())
  createdAt          DateTime             @default(now())
  updatedAt          DateTime             @updatedAt
  registerActive     Boolean              @default(true) @db.Boolean()
  nombre             String               @db.VarChar(100)
  descripcion        String?              @db.Text()
  numberPart         String?              @db.VarChar(500)
  numberSerial       String?              @db.VarChar(500)
  marcaId            Int
  categoriaId        Int
  cotizacion_detalle cotizacion_detalle[]
  marca              marca                @relation(fields: [marcaId], references: [id])
  categoria          categoria            @relation(fields: [categoriaId], references: [id])
  compra_detalle     compra_detalle[]
}

model proveedor {
  id                 Int          @id @default(autoincrement())
  createdAt          DateTime     @default(now())
  updatedAt          DateTime     @updatedAt
  registerActive     Boolean      @default(true) @db.Boolean()
  representanteLegal String       @db.VarChar(500)
  razonSocial        String       @db.VarChar(250)
  nit                String       @db.VarChar(100)
  celular            String?      @db.VarChar(50)
  telefono           String?      @db.VarChar(50)
  email              String?      @db.VarChar(500)
  direccion          String?      @db.VarChar(500)
  departamentoId     Int?         @db.Integer()
  municipio          String?      @db.VarChar(250)
  cotizacion         cotizacion[]
  compra             compra[]
}

model presupuesto {
  id             Int      @id @default(autoincrement())
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  registerActive Boolean  @default(true) @db.Boolean()
  nombre         String   @db.VarChar(100)
  descripcion    String   @db.VarChar(500)
  vencimiento    DateTime
  monto          Float
  sobrante       Float?
  compra         compra[]
}

model cotizacion {
  id                Int                  @id @default(autoincrement())
  createdAt         DateTime             @default(now())
  updatedAt         DateTime             @updatedAt
  registerActive    Boolean              @default(true) @db.Boolean()
  proveedorId       Int
  total             Float
  proveedor         proveedor            @relation(fields: [proveedorId], references: [id])
  cotizacionDetalle cotizacion_detalle[]
}

model cotizacion_detalle {
  id             Int        @id @default(autoincrement())
  createdAt      DateTime   @default(now())
  updatedAt      DateTime   @updatedAt
  registerActive Boolean    @default(true) @db.Boolean()
  precio         Float
  cantidad       Int
  productoId     Int
  cotizacionId   Int
  cotizacion     cotizacion @relation(fields: [cotizacionId], references: [id])
  producto       producto   @relation(fields: [productoId], references: [id])
}

model compra {
  id             Int              @id @default(autoincrement())
  createdAt      DateTime         @default(now())
  updatedAt      DateTime         @updatedAt
  registerActive Boolean          @default(true) @db.Boolean()
  proveedorId    Int
  total          Float
  presupuestoId  Int
  proveedor      proveedor        @relation(fields: [proveedorId], references: [id])
  compra_detalle compra_detalle[]
  presupuesto    presupuesto      @relation(fields: [presupuestoId], references: [id])
}

model compra_detalle {
  id             Int      @id @default(autoincrement())
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  registerActive Boolean  @default(true) @db.Boolean()
  precio         Float
  cantidad       Int
  productoId     Int
  compraId       Int
  compra         compra   @relation(fields: [compraId], references: [id])
  producto       producto @relation(fields: [productoId], references: [id])
}
